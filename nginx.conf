user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  client_max_body_size 200M; # allows file uploads up to 100 megabytes

  upstream backend {
      server jsq_server:8002;
  }

  server {
    listen       9001;
#     server_name  localhost;

#     root /home/test/front;

    # 防止刷新404
    location / {
        # 前端打包完放这边
        root   /app;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    location /api/
    {
        proxy_pass http://jsq_server:8002/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header REMOTE-HOST $remote_addr;

        #缓存相关配置
        #proxy_cache cache_one;
        #proxy_cache_key $host$request_uri$is_args$args;
        #proxy_cache_valid 200 304 301 302 1h;

        #持久化连接相关配置
        proxy_connect_timeout 3000s;
        proxy_read_timeout 86400s;
        proxy_send_timeout 3000s;
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection "upgrade";

        add_header X-Cache $upstream_cache_status;

        #expires 12h;
    }

    location /public/uploads/
    {
        proxy_pass http://jsq_server:8002$request_uri; #在这种情况下，如果指令中指定了 URI，它将按原样传递到服务器，替换原始请求 URI。

        #定义与代理服务器建立连接的超时。需要注意的是，这个超时时间通常不能超过75秒。
        proxy_connect_timeout 600; #秒 后端服务器连接的超时时间_发起握手等候响应超时时间

        #定义从代理服务器读取响应的超时。仅在两个连续的读取操作之间设置超时，而不是为整个响应的传输设置超时。
        #如果代理服务器在此时间内未传输任何内容，则连接将关闭。
        proxy_read_timeout 600; #秒

        #rewrite "^/\/dev/(.*)$" /$1 last; #当使用重写指令在代理位置内更改 URI 时，相同的配置将用于处理请求 ( break )：
    }

#  location /im {
#         proxy_pass http://backend/im;
#         proxy_connect_timeout 3600s; #配置点1
#         proxy_read_timeout 3600s; #配置点2,如果没效,可以考虑这个时间配置长一点
#         proxy_send_timeout 3600s; #配置点3
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header REMOTE-HOST $remote_addr;
#         #proxy_bind $remote_addr transparent;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         # rewrite /socket/(.*) /$1 break;
#         proxy_redirect off;

#     }

#     location /socket {
#         proxy_pass http://backend/socket;
#         proxy_connect_timeout 3600s; #配置点1
#         proxy_read_timeout 3600s; #配置点2,如果没效,可以考虑这个时间配置长一点
#         proxy_send_timeout 3600s; #配置点3
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header REMOTE-HOST $remote_addr;
#         #proxy_bind $remote_addr transparent;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         rewrite /socket/(.*) /$1 break;
#         proxy_redirect off;

#     }


#     location /adminer/
#     {
#         proxy_pass http://adminer:8080/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header REMOTE-HOST $remote_addr;
#
#         #缓存相关配置
#         #proxy_cache cache_one;
#         #proxy_cache_key $host$request_uri$is_args$args;
#         #proxy_cache_valid 200 304 301 302 1h;
#
#         #持久化连接相关配置
#         proxy_connect_timeout 3000s;
#         proxy_read_timeout 86400s;
#         proxy_send_timeout 3000s;
#         #proxy_http_version 1.1;
#         #proxy_set_header Upgrade $http_upgrade;
#         #proxy_set_header Connection "upgrade";
#
#         add_header X-Cache $upstream_cache_status;
#
#         #expires 12h;
#     }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }

  }
}
